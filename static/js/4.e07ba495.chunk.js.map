{"version":3,"sources":["Components/Products/ProductCard/index.js","Containers/Products/index.js","Containers/ProductDetails/index.js","Routes/ProductsRoute/index.js"],"names":["ProductCard","props","product","id","title","price","image","cart","useCart","history","useHistory","handleRedirect","React","useCallback","push","handleCartAction","isInCart","remove","add","Card","className","square","variant","elevation","CardActionArea","onClick","CardMedia","CardContent","Typography","gutterBottom","component","noWrap","color","CardActions","Button","startIcon","size","memo","Products","useSelector","state","products","productList","isLoading","categories","dispatch","useDispatch","useEffect","getCategories","getProducts","handleFilterChange","event","value","Autocomplete","options","style","width","onChange","renderInput","params","TextField","label","Grid","container","spacing","justify","map","item","CircularProgress","ProductDetails","productId","useParams","useState","productData","setproductData","find","parseInt","getProductByID","handleGoBack","goBack","Boolean","xs","IconButton","Paper","src","alt","category","description","ProductsRoute","getcart","path"],"mappings":"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","file":"static/js/4.e07ba495.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ProductCard.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { useCart } from \"../../../Hooks/useCart\";\r\n\r\nfunction ProductCard(props) {\r\n  // Recieving product details from prop\r\n  const { product } = props;\r\n  const { id, title, price, image } = product;\r\n\r\n  const cart = useCart(product);\r\n  const history = useHistory();\r\n\r\n  // Redirecting to details page\r\n  const handleRedirect = React.useCallback(() => {\r\n    history.push(`/products/${id}`);\r\n  }, [history, id]);\r\n\r\n  //Handle add-to / remove-from cart\r\n  const handleCartAction = React.useCallback(() => {\r\n    if (cart.isInCart) cart.remove();\r\n    else cart.add();\r\n  }, [cart]);\r\n\r\n  return (\r\n    <Card className=\"product-card\" square variant=\"elevation\" elevation={5}>\r\n      <CardActionArea onClick={handleRedirect}>\r\n        <CardMedia image={image} className=\"image\" title={title} />\r\n        <CardContent className=\"content\">\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h6\"\r\n            component=\"h6\"\r\n            className=\"title\"\r\n            noWrap\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {price}$\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions className=\"actions\">\r\n        <Button\r\n          startIcon={\r\n            cart.isInCart ? <DeleteForeverIcon /> : <ShoppingBasketIcon />\r\n          }\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          onClick={handleCartAction}\r\n          variant=\"outlined\"\r\n        >\r\n          {cart.isInCart ? \"Remove from cart\" : \"Add to cart\"}\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default React.memo(ProductCard);\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport \"./Products.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProducts, getCategories } from \"../../Store/Actions/Products\";\r\nimport ProductCard from \"../../Components/Products/ProductCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction Products() {\r\n  // Fetching the state from store\r\n  const { productList, isLoading, categories } = useSelector(\r\n    (state) => state.products\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  // Getting all products on mount\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n    dispatch(getProducts());\r\n  }, [dispatch]);\r\n\r\n  // Category filter change handler\r\n  const handleFilterChange = useCallback(\r\n    (event, value) => {\r\n      if (value) dispatch(getProducts(value));\r\n      else dispatch(getProducts());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <div className=\"Products-container\">\r\n      <div className=\"header\">\r\n        <Typography variant=\"h5\" component=\"h5\">\r\n          PRODUCTS\r\n        </Typography>\r\n        <Autocomplete\r\n          id=\"product-filter\"\r\n          options={categories}\r\n          style={{ width: 300 }}\r\n          onChange={handleFilterChange}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Select Category\" variant=\"standard\" />\r\n          )}\r\n        />\r\n      </div>\r\n      <Grid\r\n        container\r\n        className=\"product-grid\"\r\n        spacing={6}\r\n        justify=\"space-evenly\"\r\n      >\r\n        {productList.map((product) => (\r\n          <Grid item key={product.id}>\r\n            <ProductCard product={product} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      {isLoading && (\r\n        <div className=\"loader\">\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Products);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ProductDetails.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getProductByID } from \"../../Store/Actions/Products\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { useCart } from \"../../Hooks/useCart\";\r\n\r\nfunction ProductDetails() {\r\n  const { productId } = useParams();\r\n  const history = useHistory();\r\n  const [productData, setproductData] = useState({ id: productId });\r\n  const { productList } = useSelector((state) => state.products);\r\n  const cart = useCart(productData);\r\n  const dispatch = useDispatch(productData);\r\n\r\n  // Geeting the productDetails from API if not present in store\r\n  useEffect(() => {\r\n    let product = productList.find(\r\n      (product) => parseInt(product.id) === parseInt(productId)\r\n    );\r\n    if (product) setproductData(product);\r\n    else dispatch(getProductByID(productId));\r\n  }, [productList, productId, dispatch]);\r\n\r\n  // Handle page back button\r\n  const handleGoBack = React.useCallback(() => {\r\n    history.goBack();\r\n  }, [history]);\r\n\r\n  //Handle add-to / remove-from cart\r\n  const handleCartAction = React.useCallback(() => {\r\n    if (cart.isInCart) cart.remove();\r\n    else cart.add();\r\n  }, [cart]);\r\n\r\n  if (Boolean(productData)) {\r\n    return (\r\n      <div className=\"product-details\">\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <IconButton color=\"secondary\" onClick={handleGoBack}>\r\n              <ArrowBackIcon color=\"secondary\" />\r\n            </IconButton>\r\n            <Typography component=\"span\" variant=\"h5\">\r\n              {productData.title}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item container>\r\n            <Grid item>\r\n              <Paper elevation={2} className=\"product-image-card\">\r\n                <img src={productData.image} alt=\"product\" />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item className=\"price-section\">\r\n              <Grid item>\r\n                <Typography color=\"textSecondary\">Price: </Typography>\r\n                <Typography variant=\"h6\">{productData.price}$</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textSecondary\">Category: </Typography>\r\n                <Typography variant=\"h6\">{productData.category}</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  startIcon={\r\n                    cart.isInCart ? (\r\n                      <DeleteForeverIcon />\r\n                    ) : (\r\n                      <ShoppingBasketIcon />\r\n                    )\r\n                  }\r\n                  onClick={handleCartAction}\r\n                >\r\n                  {cart.isInCart ? \"Remoe from cart\" : \"Add to cart\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography color=\"textSecondary\">Description: </Typography>\r\n            <Typography>{productData.description}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  } else\r\n    return (\r\n      <div className=\"loader\">\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ProductDetails);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { getcart } from \"../../Store/Actions/Auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Products from \"../../Containers/Products\";\r\nimport ProductDetails from \"../../Containers/ProductDetails\";\r\n\r\nfunction ProductsRoute() {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => dispatch(getcart()), [dispatch]);\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/products/:productId\" component={ProductDetails} />\r\n      <Route path=\"/products\" component={Products} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default ProductsRoute;\r\n"],"sourceRoot":""}